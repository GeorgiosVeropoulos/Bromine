# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Install Stable Google Chrome
        run: |
          sudo apt update
          sudo apt install -y google-chrome-stable
        shell: bash
      - name: Verify Chrome Version
        run: google-chrome-stable --version

      # Set the DRIVER_URL environment variable dynamically
      - name: Set Driver URL for GitHub Actions
        run: |
          DRIVER_IP=$(curl -s ifconfig.me)
          DRIVER_URL="http://$DRIVER_IP:9515"
          echo "DRIVER_URL=$DRIVER_URL" >> $GITHUB_ENV
          echo "ChromeDriver running at: $DRIVER_URL"

#      - name: Set Driver URL for GitHub Actions
#        run: echo "DRIVER_URL=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_ENV

      - name: Verify DRIVER_URL
        run: echo "Driver URL is $DRIVER_URL"


      - name: Build with Maven
        run: mvn -B clean install -DskipTests=true -f parent/pom.xml
      - name: Run Tests
        run: mvn -B test -Dgroups=TagName -f web/pom.xml
      - name: CodeCov coverage
#      - uses: actions/checkout@main
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true # optional (default = false)
          # files: ./coverage1.xml,./coverage2.xml # optional
          # flags: unittests # optional
          name: codecov-umbrella # optional
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true # optional (default = false)
